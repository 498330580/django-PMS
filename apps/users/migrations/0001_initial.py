# Generated by Django 2.2.7 on 2019-11-23 13:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('classification', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('wx', models.CharField(blank=True, max_length=50, null=True, verbose_name='微信号码')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=10, verbose_name='姓名')),
                ('named', models.CharField(default='无', max_length=10, verbose_name='曾用名')),
                ('nation', models.CharField(choices=[('汉族', '汉族'), ('壮族', '壮族'), ('满族', '满族'), ('回族', '回族'), ('苗族', '苗族'), ('维吾尔族', '维吾尔族'), ('土家族', '土家族'), ('彝族', '彝族'), ('蒙古族', '蒙古族'), ('藏族', '藏族'), ('布依族', '布依族'), ('侗族', '侗族'), ('瑶族', '瑶族'), ('朝鲜族', '朝鲜族'), ('白族', '白族'), ('哈尼族', '哈尼族'), ('哈萨克族', '哈萨克族'), ('黎族', '黎族'), ('傣族', '傣族'), ('畲族', '畲族'), ('傈僳族', '傈僳族'), ('仡佬族', '仡佬族'), ('东乡族', '东乡族'), ('高山族', '高山族'), ('拉祜族', '拉祜族'), ('水族', '水族'), ('佤族', '佤族'), ('纳西族', '纳西族'), ('羌族', '羌族'), ('土族', '土族'), ('仫佬族', '仫佬族'), ('锡伯族', '锡伯族'), ('柯尔克孜族', '柯尔克孜族'), ('达斡尔族', '达斡尔族'), ('景颇族', '景颇族'), ('毛南族', '毛南族'), ('撒拉族', '撒拉族'), ('布朗族', '布朗族'), ('塔吉克族', '塔吉克族'), ('阿昌族', '阿昌族'), ('普米族', '普米族'), ('鄂温克族', '鄂温克族'), ('怒族', '怒族'), ('京族', '京族'), ('基诺族', '基诺族'), ('德昂族', '德昂族'), ('保安族', '保安族'), ('俄罗斯族', '俄罗斯族'), ('裕固族', '裕固族'), ('乌孜别克族', '乌孜别克族'), ('门巴族', '门巴族'), ('鄂伦春族', '鄂伦春族'), ('独龙族', '独龙族'), ('塔塔尔族', '塔塔尔族'), ('赫哲族', '赫哲族'), ('珞巴族', '珞巴族')], default='汉族', max_length=10, verbose_name='民族')),
                ('sex', models.CharField(choices=[('男', '男'), ('女', '女')], default='男', help_text='默认为“男”,系统会根据身份证自动判断', max_length=5, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, help_text='系统会根据身份证自动填写', null=True, verbose_name='出生日期')),
                ('zodiac', models.CharField(choices=[('不清', '不清'), ('猴', '猴'), ('鸡', '鸡'), ('狗', '狗'), ('猪', '猪'), ('鼠', '鼠'), ('牛', '牛'), ('虎', '虎'), ('兔', '兔'), ('龙', '龙'), ('蛇', '蛇'), ('马', '马'), ('羊', '羊')], default='不清', help_text='系统会根据身份证自动填写', max_length=5, verbose_name='生肖')),
                ('constellation', models.CharField(choices=[('不清', '不清'), ('摩羯座', '摩羯座'), ('水瓶座', '水瓶座'), ('双鱼座', '双鱼座'), ('白羊座', '白羊座'), ('金牛座', '金牛座'), ('双子座', '双子座'), ('巨蟹座', '巨蟹座'), ('狮子座', '狮子座'), ('处女座', '处女座'), ('天秤座', '天秤座'), ('天蝎座', '天蝎座'), ('射手座', '射手座')], default='不清', help_text='系统会根据身份证自动填写', max_length=6, verbose_name='星座')),
                ('idnumber', models.CharField(db_index=True, help_text='如果最后一位为X请大写', max_length=18, unique=True, verbose_name='身份证')),
                ('permanent', models.CharField(help_text='身份证上的地址', max_length=100, verbose_name='户籍地址')),
                ('permanenttype', models.CharField(choices=[('城镇', '城镇'), ('农村', '农村')], max_length=10, verbose_name='户籍类别')),
                ('home', models.CharField(help_text='现在居住的地址，能联系到的，可以和户籍地址相同', max_length=100, verbose_name='现居地址')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号码')),
                ('hobby', models.CharField(default='无', max_length=100, verbose_name='爱好/特长')),
                ('politics', models.CharField(choices=[('群众', '群众'), ('中共党员', '中共党员'), ('中共党员', '中共党员')], default='群众', max_length=10, verbose_name='政治面貌')),
                ('politicstime', models.DateField(blank=True, null=True, verbose_name='入党/团时间')),
                ('marriage', models.CharField(choices=[('已婚', '已婚'), ('未婚', '未婚'), ('离婚', '离婚'), ('丧偶', '丧偶')], default='未婚', max_length=10, verbose_name='婚姻状态')),
                ('entry', models.DateField(blank=True, help_text='本信息由管理员填写', null=True, verbose_name='入职时间')),
                ('entryzhuanzheng', models.DateField(blank=True, help_text='本信息由管理员填写', null=True, verbose_name='入职转正时间')),
                ('zhuanfujing', models.DateField(blank=True, help_text='本信息由管理员填写', null=True, verbose_name='辅警入职时间')),
                ('fujingzhuanzheng', models.DateField(blank=True, help_text='本信息由管理员填写', null=True, verbose_name='辅警入职转正时间')),
                ('quit', models.DateField(blank=True, help_text='本信息由管理员填写', null=True, verbose_name='离职/调离时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('bianzhi', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.Organization', verbose_name='编制位置')),
                ('category', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.CategoryType', verbose_name='人员类别')),
                ('dadui', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.DaDuiType', verbose_name='所属大队')),
                ('drivinglicense', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classification.DrivingLicenseType', verbose_name='驾照')),
                ('economics', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.Economics', verbose_name='家庭经济状态')),
                ('gangweiname', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.PostName', verbose_name='岗位名称')),
                ('gangweitype', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.PostType', verbose_name='岗位类别')),
                ('jiediao', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.Borrow', verbose_name='借调位置')),
                ('jiguan', models.ForeignKey(default=1, help_text='系统会根据身份证自动填写', on_delete=django.db.models.deletion.DO_NOTHING, to='classification.DiZhi', verbose_name='籍贯')),
                ('sources', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.Sources', verbose_name='经济来源')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('veteran', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.DemobilizedType', verbose_name='退役类别')),
                ('zhongdui', models.ForeignKey(blank=True, help_text='本信息由管理员填写', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='classification.ZhongDuiType', verbose_name='所属中队（小组）')),
            ],
            options={
                'verbose_name': '个人档案',
                'verbose_name_plural': '个人档案',
                'ordering': ['-entry'],
            },
        ),
        migrations.CreateModel(
            name='PhysicalExamination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information', models.TextField(verbose_name='体检结论')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalInformation', verbose_name='姓名')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.TiJianJieGuo', verbose_name='结果')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.Year', verbose_name='体检年份')),
            ],
            options={
                'verbose_name': '个人体检信息',
                'verbose_name_plural': '个人体检信息',
            },
        ),
        migrations.CreateModel(
            name='MeasureInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shengao', models.FloatField(verbose_name='身高（CM）')),
                ('tizhong', models.FloatField(verbose_name='体重（KG）')),
                ('xiongwei', models.FloatField(verbose_name='胸围（CM）')),
                ('jiankuan', models.FloatField(verbose_name='肩宽（CM）')),
                ('xiuchang', models.FloatField(verbose_name='袖长（CM）')),
                ('yaowei', models.FloatField(verbose_name='腰围（CM）')),
                ('tunwei', models.FloatField(verbose_name='臀围（CM）')),
                ('duwei', models.FloatField(verbose_name='肚围（CM）')),
                ('kuchang', models.FloatField(verbose_name='裤长（CM）')),
                ('datuiwei', models.FloatField(verbose_name='大腿围（CM）')),
                ('maowei', models.FloatField(verbose_name='帽围（CM）')),
                ('xiezi', models.FloatField(verbose_name='鞋子（码）')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalInformation', verbose_name='姓名')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.Year', verbose_name='测量年份')),
            ],
            options={
                'verbose_name': '个人量体信息',
                'verbose_name_plural': '个人量体信息',
            },
        ),
        migrations.CreateModel(
            name='HomeInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', models.CharField(db_index=True, max_length=10, verbose_name='姓名')),
                ('nation', models.CharField(choices=[('汉族', '汉族'), ('壮族', '壮族'), ('满族', '满族'), ('回族', '回族'), ('苗族', '苗族'), ('维吾尔族', '维吾尔族'), ('土家族', '土家族'), ('彝族', '彝族'), ('蒙古族', '蒙古族'), ('藏族', '藏族'), ('布依族', '布依族'), ('侗族', '侗族'), ('瑶族', '瑶族'), ('朝鲜族', '朝鲜族'), ('白族', '白族'), ('哈尼族', '哈尼族'), ('哈萨克族', '哈萨克族'), ('黎族', '黎族'), ('傣族', '傣族'), ('畲族', '畲族'), ('傈僳族', '傈僳族'), ('仡佬族', '仡佬族'), ('东乡族', '东乡族'), ('高山族', '高山族'), ('拉祜族', '拉祜族'), ('水族', '水族'), ('佤族', '佤族'), ('纳西族', '纳西族'), ('羌族', '羌族'), ('土族', '土族'), ('仫佬族', '仫佬族'), ('锡伯族', '锡伯族'), ('柯尔克孜族', '柯尔克孜族'), ('达斡尔族', '达斡尔族'), ('景颇族', '景颇族'), ('毛南族', '毛南族'), ('撒拉族', '撒拉族'), ('布朗族', '布朗族'), ('塔吉克族', '塔吉克族'), ('阿昌族', '阿昌族'), ('普米族', '普米族'), ('鄂温克族', '鄂温克族'), ('怒族', '怒族'), ('京族', '京族'), ('基诺族', '基诺族'), ('德昂族', '德昂族'), ('保安族', '保安族'), ('俄罗斯族', '俄罗斯族'), ('裕固族', '裕固族'), ('乌孜别克族', '乌孜别克族'), ('门巴族', '门巴族'), ('鄂伦春族', '鄂伦春族'), ('独龙族', '独龙族'), ('塔塔尔族', '塔塔尔族'), ('赫哲族', '赫哲族'), ('珞巴族', '珞巴族')], default='汉族', max_length=10, verbose_name='民族')),
                ('idnumber', models.CharField(db_index=True, help_text='如果最后一位为X请大写', max_length=18, unique=True, verbose_name='身份证')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('politics', models.CharField(choices=[('群众', '群众'), ('中共党员', '中共党员'), ('中共党员', '中共党员')], default='群众', max_length=10, verbose_name='政治面貌')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号码')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('appellation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.ChengWei', verbose_name='称谓')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalInformation', verbose_name='本人信息')),
                ('renyuanxianzhuang', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.RenYuanXianZhuang', verbose_name='人员现状')),
                ('shenfenguilei', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.ShenFenGuiLei', verbose_name='身份归类')),
                ('xueli', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.EducationType', verbose_name='学历')),
            ],
            options={
                'verbose_name': '家庭成员信息',
                'verbose_name_plural': '家庭成员信息',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=50, verbose_name='学校名称')),
                ('graduation', models.CharField(default='不清', max_length=50, unique=True, verbose_name='毕业证书编号')),
                ('degree', models.CharField(default='不清', max_length=50, unique=True, verbose_name='学位证书编号')),
                ('start', models.DateField(verbose_name='入学时间')),
                ('end', models.DateField(verbose_name='毕业时间')),
                ('school_time', models.FloatField(default=3, help_text='正常从入学到毕业需要的时间，填写数字', verbose_name='学制（单位：年）')),
                ('major', models.CharField(default='无', help_text='所学专业，没有请填无', max_length=20, verbose_name='专业')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('academicdegree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classification.AcademicDegreeType', verbose_name='学位')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalInformation', verbose_name='姓名')),
                ('xueli', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.EducationType', verbose_name='学历')),
                ('xuelisuoming', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.XueLiInformation', verbose_name='学历说明')),
            ],
            options={
                'verbose_name': '学历信息',
                'verbose_name_plural': '学历信息',
                'ordering': ['-end'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle', models.CharField(db_index=True, default='无', max_length=10, unique=True, verbose_name='车牌号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PersonalInformation', verbose_name='姓名')),
                ('vehiclecategory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='classification.CarType', verbose_name='车辆类别')),
            ],
            options={
                'verbose_name': '车辆信息',
                'verbose_name_plural': '车辆信息',
            },
        ),
    ]
